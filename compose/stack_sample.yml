### Notes
#
# - using the 'build' config instead of 'image' allows to build the stack with just 'docker-compose build'
# - SYS_PTRACE capability is needed to allow the containers to read /proc/$PID, which is needed by init scripts
# - The docker-compose 'service' name corresponds to the top-level yml keys
# - The container name is used in most 'docker' commands (Ex : docker exec -ti lethak_cli su site)
#  Keeping a separate container name for each project allows to run many container platforms in parallel
# - The hostname key is used by Docker internal DNS to reach other containers
#
version: "2.2"
services:
    web:
        image: lethak/apache:7.1
        hostname: web
        container_name: lethak_web
        ports:
            - "88:88"
        volumes:
            - "~/www:/var/www:rw"
            - "./startup.sh:/run/startup.sh:ro"
        env_file:
            - .env
        cap_add:
            - SYS_PTRACE
        networks:
            - my_dev_stack
        extra_hosts:
            - "customer_api:162.242.195.82"

    cli:
        image: lethak/php_cli:7.1
        hostname: cli
        container_name: lethak_cli
        privileged: true
        user: ${DEV_UID:-1000}:${DEV_GID:-1000}
        volumes:
            - "$SSH_AUTH_SOCK:/ssh-agent:ro"
            - "~/.gitconfig:/home/site/.gitconfig:ro"
            - "~/.ssh/config:/home/site/.ssh/config:ro"
            - "~/www:/var/www:rw"
        environment:
            - SSH_AUTH_SOCK=/ssh-agent
            - TERM=xterm-color
        cap_add:
            - SYS_PTRACE
        networks:
            - my_dev_stack

    memcached:
        image: lethak/memcached
        hostname:  memcached
        container_name: lethak_memcached
        cap_add:
            - SYS_PTRACE
        networks:
            - my_dev_stack

    mysql:
        image: lethak/mysql:5.6
        hostname: mysql
        container_name: lethak_mysql
        ports:
            - "3307:3306"
        volumes:
            - "./data/mysql/node_1:/var/lib/mysql"
        env_file:
            - docker-compose.env
        cap_add:
            - SYS_PTRACE
        command: ["/root/bootstrap.sh", "mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci"]
        networks:
            - my_dev_stack

    # RabbitMQ Cluster (node 1/2)
    rabbitmq_1:
        environment:
          - RABBITMQ_ERLANG_COOKIE='my_secret_cookie'
        networks:
          - my_dev_stack
        hostname: rabbitmq_1
        container_name: lethak_rabbitmq_1
        image: "rabbitmq:3.7.2-management"
        ports:
          - "15672:15672"
          - "5672:5672"
        tty: true
        volumes:
          - "rabbit1:/var/lib/rabbitmq"
          - "./config/rabbitmq/:/etc/rabbitmq/"
        command:  bash -c "sleep 10; rabbitmq-server;"

    # RabbitMQ Cluster (node 2/2)
    rabbitmq_2:
        environment:
          - RABBITMQ_ERLANG_COOKIE='my_secret_cookie'
        networks:
          - my_dev_stack
        hostname: rabbitmq_2
        container_name: lethak_rabbitmq_2
        depends_on:
          - rabbitmq_1
        image: "rabbitmq:3.7.2-management"
        ports:
          - "15673:15672"
          - "5673:5672"
        tty: true
        volumes:
          - "rabbit2:/var/lib/rabbitmq"
          - "./conf/:/etc/rabbitmq/"
        command:  bash -c "sleep 10; rabbitmq-server;"

    # Elasticsearch Cluster (node 1/2)
    elasticsearch_1:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
        hostname: elasticsearch_1
        container_name: lethak_elasticsearch_1
        environment:
          - cluster.name=docker-cluster
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
        ulimits:
          memlock:
            soft: -1
            hard: -1
        volumes:
          - "./data/elasticsearch/node_1:/usr/share/elasticsearch/data"
#          - "./config/elasticsearch/custom_elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
        ports:
          - 9200:9200
        networks:
          - my_dev_stack
        user: ${DEV_UID:-1000}:${DEV_GID:-1000}

    # Elasticsearch Cluster (node 2/2)
    elasticsearch_2:
        hostname: elasticsearch_2
        image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
        container_name: lethak_elasticsearch_2
        environment:
          - cluster.name=docker-cluster
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
          - "discovery.zen.ping.unicast.hosts=elasticsearch"
        ulimits:
          memlock:
            soft: -1
            hard: -1
        volumes:
          - "./data/elasticsearch/node_2:/usr/share/elasticsearch/data"
#          - "./config/elasticsearch/custom_elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
        networks:
          - my_dev_stack
        user: ${DEV_UID:-1000}:${DEV_GID:-1000}

networks:
    my_dev_stack:
        ipam:
          driver: default
          config:
          -
            subnet: 172.17.0.0/24